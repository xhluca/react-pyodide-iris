{"version":3,"sources":["logo.svg","python/train.py","python/predict.py","App.js","reportWebVitals.js","index.js"],"names":["round","n","Number","parseFloat","toFixed","runModule","script","func","fetch","then","src","text","AnnotatedSlider","props","useState","value","setValue","className","name","type","step","min","max","onChange","event","target","onMouseUp","setter","App","mounted","useRef","sepLen","setSepLen","sepWid","setSepWid","petLen","setPetLen","petWid","setPetWid","label","setLabel","useEffect","window","languagePluginLoader","current","pyodide","loadPackage","trainScript","code","runPython","predScript","data","sep_len","sep_wid","pet_len","pet_wid","predicted","logo","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAAe,MAA0B,iCCA1B,G,MAAA,IAA0B,kCCA1B,MAA0B,mCCOnCA,EAAQ,SAACC,GAAD,OAAOC,OAAOC,WAAWF,GAAGG,QAAQ,IAE5CC,EAAY,SAACC,EAAQC,GACzB,OAAOC,MAAMF,GAAQG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,KAAKF,IAI9CK,EAAkB,SAAAC,GAAU,IAAD,EACLC,mBAASd,EAAMa,EAAME,QADhB,mBACxBA,EADwB,KACjBC,EADiB,KAG/B,OACE,gCACE,sBAAKC,UAAU,kBAAf,UACGJ,EAAMK,KADT,KACiBL,EAAME,MADvB,SAGA,qBAAKE,UAAU,aAAf,SACE,uBACEE,KAAK,QACLC,KAAM,IACNC,IAAKR,EAAMQ,IACXC,IAAKT,EAAMS,IACXP,MAAOA,EACPQ,SAAU,SAAAC,GAAK,OAAIR,EAASQ,EAAMC,OAAOV,QACzCW,UAAW,SAAAF,GAAK,OAAIX,EAAMc,OAAO3B,EAAMwB,EAAMC,OAAOV,iBA8D/Ca,MAvDf,WACE,IAAMC,EAAUC,kBAAO,GADV,EAEehB,mBAAS,GAFxB,mBAENiB,EAFM,KAEEC,EAFF,OAGelB,mBAAS,MAHxB,mBAGNmB,EAHM,KAGEC,EAHF,OAIepB,mBAAS,GAJxB,mBAINqB,EAJM,KAIEC,EAJF,OAKetB,mBAAS,MALxB,mBAKNuB,EALM,KAKEC,EALF,OAOaxB,mBAAS,gBAPtB,mBAONyB,EAPM,KAOCC,EAPD,KAuCb,OA9BAC,qBAAU,WACRC,OAAOC,qBACJlC,MAAK,WACJ,IAAwB,IAApBoB,EAAQe,QACV,OAAOF,OAAOG,QAAQC,YAAY,CAAC,QAAS,SAAU,oBAEzDrC,MAAK,YACoB,IAApBoB,EAAQe,UACVf,EAAQe,SAAU,EAClBvC,EAAU0C,GAAa,SAAAC,GACrBR,EAAS,iBACTE,OAAOG,QAAQI,UAAUD,UAI9BvC,MAAK,WACJJ,EAAU6C,GAAY,SAAAF,GACpBR,EAAS,mBACTE,OAAOS,KAAO,CACZC,QAASrB,EACTsB,QAASpB,EACTqB,QAASnB,EACToB,QAASlB,GAEX,IAAMmB,EAAYd,OAAOG,QAAQI,UAAUD,GAC3CR,EAASgB,WAGd,CAACzB,EAAQE,EAAQE,EAAQE,IAG1B,qBAAKpB,UAAU,MAAf,SACE,sBAAKA,UAAU,cAAf,UACE,qBAAKP,IAAK+C,EAAMxC,UAAU,WAAWyC,IAAI,SACzC,gCACE,cAAC,EAAD,CAAiBxC,KAAK,eAAeG,IAAK,EAAGC,IAAK,EAAGP,MAAOgB,EAAQJ,OAAQK,IAC5E,cAAC,EAAD,CAAiBd,KAAK,cAAcG,IAAK,EAAGC,IAAK,IAAKP,MAAOkB,EAAQN,OAAQO,IAC7E,cAAC,EAAD,CAAiBhB,KAAK,eAAeG,IAAK,EAAGC,IAAK,EAAGP,MAAOoB,EAAQR,OAAQS,IAC5E,cAAC,EAAD,CAAiBlB,KAAK,cAAcG,IAAK,EAAGC,IAAK,IAAKP,MAAOsB,EAAQV,OAAQW,OAE/E,oDAAuBC,WC1EhBoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpD,MAAK,YAAkD,IAA/CqD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.87cb7ee8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/train.d7b1dbfa.py\";","export default __webpack_public_path__ + \"static/media/predict.f128f1d3.py\";","import { useEffect, useState, useRef } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport trainScript from './python/train.py';\nimport predScript from './python/predict.py';\n\nconst round = (n) => Number.parseFloat(n).toFixed(2);\n\nconst runModule = (script, func) => {\n  return fetch(script).then(src => src.text()).then(func)\n}\n\n\nconst AnnotatedSlider = props => {\n  const [value, setValue] = useState(round(props.value));\n\n  return (\n    <div>\n      <div className=\"App-slider-desc\">\n        {props.name}: {props.value} cm\n      </div>\n      <div className=\"App-slider\">\n        <input\n          type=\"range\"\n          step={0.05}\n          min={props.min}\n          max={props.max}\n          value={value}\n          onChange={event => setValue(event.target.value)}\n          onMouseUp={event => props.setter(round(event.target.value))}\n        />\n      </div>\n    </div>\n  )\n}\n\nfunction App() {\n  const mounted = useRef(false);\n  const [sepLen, setSepLen] = useState(6.00);\n  const [sepWid, setSepWid] = useState(3.25);\n  const [petLen, setPetLen] = useState(4);\n  const [petWid, setPetWid] = useState(1.25);\n\n  const [label, setLabel] = useState(\"(loading...)\");\n\n  useEffect(() => {\n    window.languagePluginLoader\n      .then(() => {\n        if (mounted.current === false)\n          return window.pyodide.loadPackage(['numpy', 'pandas', 'scikit-learn']);\n      })\n      .then(() => {\n        if (mounted.current === false) {\n          mounted.current = true;\n          runModule(trainScript, code => {\n            setLabel(\"(training...)\");\n            window.pyodide.runPython(code);\n          });\n        }\n      })\n      .then(() => {\n        runModule(predScript, code => {\n          setLabel(\"(predicting...)\");\n          window.data = {\n            sep_len: sepLen,\n            sep_wid: sepWid,\n            pet_len: petLen,\n            pet_wid: petWid\n          };\n          const predicted = window.pyodide.runPython(code);\n          setLabel(predicted);\n        });\n      })\n  }, [sepLen, sepWid, petLen, petWid]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-content\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <div>\n          <AnnotatedSlider name=\"Sepal Length\" min={4} max={8} value={sepLen} setter={setSepLen} />\n          <AnnotatedSlider name=\"Sepal Width\" min={2} max={4.5} value={sepWid} setter={setSepWid} />\n          <AnnotatedSlider name=\"Petal Length\" min={1} max={7} value={petLen} setter={setPetLen} />\n          <AnnotatedSlider name=\"Petal Width\" min={0} max={2.5} value={petWid} setter={setPetWid} />\n        </div>\n        <div>Predicted label: {label}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}